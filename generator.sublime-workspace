{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"filn",
				"filenameMod"
			],
			[
				"full",
				"fullFrth"
			],
			[
				"issue",
				"issue"
			],
			[
				"fil",
				"filenameMod"
			],
			[
				"i",
				"iframe	Tag"
			],
			[
				"num",
				"numLines"
			],
			[
				"end",
				"endChar"
			],
			[
				"state",
				"state"
			],
			[
				"pass",
				"passFail"
			],
			[
				"cle",
				"cleanup"
			],
			[
				"zip",
				"zipLength"
			],
			[
				"city",
				"cityLength"
			],
			[
				"str",
				"streetLength"
			],
			[
				"clean",
				"cleanupSlave"
			],
			[
				"cl",
				"cleanupSlave"
			],
			[
				"name",
				"nameLength"
			],
			[
				"add",
				"addie"
			],
			[
				"string",
				"stringSplit"
			],
			[
				"vali",
				"validateLine"
			],
			[
				"val",
				"validateLine"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "/*Ryan Buzzell\n *generates a HTML link for Segfault given a filename\n */\n\n #include <iostream>\n #include <fstream>\n #include <string>\n using namespace std;\n\n const string fullFirst = \"<a href =\\\"https://members.csh.rit.edu/segfault/Segfault%20-%20Volume%20\";\n const string fullSec = \",%20Issue%20\";\n const string fullTri = \".pdf\\\" target=\\\"iframePdf\\\">Issue \";\n const string fullFrth = \"</a>\";\n int main()\n { \n 	//Declare Variables\n 	string filename;\n 	string filenameMod;\n 	string volume;\n 	string issue;\n\n 	cout << \"NOTE: Filename MUST be in format \\\"Segfault - Volume x, Issue y.pdf\\\"\" << endl;\n 	cout << \"Enter Issue Number: \";\n 	cin >> issue;\n 	cout << \"Enter volume Number: \";\n 	cin >> volume;\n\n\n 	filenameMod = fullFirst + volume + fullSec + issue + fullTri + issue + fullFrth;\n 	cout << filenameMod << endl;\n 	fstream fout;\n 	fout.open(\"output.txt\");\n 	cout << \"Wrote .txt\" << endl;\n 	fout << filenameMod;\n 	fout.close();\n 	fout.open(\"output.html\");\n 	fout << filenameMod;\n 	cout << \"wrote .html\";\n 	fout.close();\n\n 	return 0;\n\n }",
			"file": "autoName.cpp",
			"file_size": 1038,
			"file_write_time": 1357421154000000,
			"settings":
			{
				"buffer_size": 1038,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/ryan/Desktop/Segfault Archive/volume16.html",
		"/home/ryan/Desktop/Segfault Archive/volume16-20.html",
		"/home/ryan/Desktop/Segfault Archive/volume11-15.html",
		"/home/ryan/Desktop/Segfault Archive/volume6.html",
		"/home/ryan/Desktop/Segfault Archive/volume14.html",
		"/home/ryan/Desktop/Segfault Archive/volume6-10.html",
		"/home/ryan/Desktop/Segfault Archive/loremIpsum.html",
		"/home/ryan/Desktop/Segfault Archive/volume5.html",
		"/home/ryan/Desktop/Segfault Archive/volume4.html",
		"/home/ryan/Desktop/Bootstrap, from Twitter.html",
		"/home/ryan/Desktop/Segfault Archive/annualIndex.html",
		"/home/ryan/Desktop/Segfault Archive/volume1-10.html",
		"/home/ryan/Desktop/Segfault Archive/volume39.html",
		"/home/ryan/Desktop/Segfault Archive/volume38.html",
		"/home/ryan/Desktop/Segfault Archive/volume37.html",
		"/home/ryan/Desktop/Segfault Archive/volume36.html",
		"/home/ryan/Desktop/Segfault Archive/volume35.html",
		"/home/ryan/Desktop/Segfault Archive/volume34.html",
		"/home/ryan/Desktop/Segfault Archive/volume33.html",
		"/home/ryan/Desktop/Segfault Archive/volume32.html",
		"/home/ryan/Desktop/Segfault Archive/volume31.html",
		"/home/ryan/Desktop/Segfault Archive/volume30.html",
		"/home/ryan/Desktop/Segfault Archive/volume29.html",
		"/home/ryan/Desktop/Segfault Archive/volume28.html",
		"/home/ryan/Desktop/Segfault Archive/volume27.html",
		"/home/ryan/Desktop/Segfault Archive/volume25.html",
		"/home/ryan/Desktop/Segfault Archive/volume26.html",
		"/home/ryan/Desktop/annualIndex.html",
		"/home/ryan/Desktop/Segfault Archive/annualIndex.php",
		"/home/ryan/Desktop/Segfault Archive/volume24.html",
		"/home/ryan/Desktop/Segfault Archive/volume23.html",
		"/home/ryan/Desktop/volume15.html",
		"/home/ryan/Desktop/volume16.html",
		"/home/ryan/Desktop/volume2.html",
		"/home/ryan/Desktop/volume3.html",
		"/home/ryan/Desktop/volume4.html",
		"/home/ryan/Desktop/volume5.html",
		"/home/ryan/Desktop/volume6.html",
		"/home/ryan/Desktop/volume14.html",
		"/home/ryan/Desktop/volume1.html",
		"/home/ryan/Desktop/untitled.html",
		"/home/ryan/Desktop/yearIndex.html",
		"/home/ryan/Dropbox/Programming/programmingWithCLasses/project1/Project1.cpp",
		"/home/ryan/Dropbox/programmingWithCLasses/Lab 1/Lab1Exercise2.cpp",
		"/home/ryan/Dropbox/projectTracker/hello.php",
		"/home/ryan/Dropbox/programmingWithCLasses/main.cpp",
		"/home/ryan/Dropbox/programmingWithCLasses/index.html"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"2038",
			",",
			"Segfault%20-%20",
			"2028",
			"2035",
			"2034",
			"2028",
			"2027",
			"2030",
			"2024",
			"2027",
			"2025",
			"2023",
			"204",
			"2025",
			"2024",
			"length",
			"Length",
			".zip"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"2039",
			"",
			"2038",
			"2037",
			"2036",
			"2035",
			"2034",
			"2033",
			"2032",
			"2031",
			"2030",
			"2029",
			"2028",
			"2027",
			"2026",
			"2025",
			"find_last_of(\"1234567890qwertyuiopasdfghjklzxcvbnm\")",
			"find_first_of(\"1234567890qwertyuiopasdfghjklzxcvbnm\")",
			"Stop",
			"Start",
			"Start\n    int streetLength;\n    int cityLength;\n    int stateLength;\n    int zipLength;\n",
			"    int nameLength;\n    int streetLength;\n    int cityLength;\n    int stateLength;\n    int zipLength;\n",
			"Start\n    int cityLength;\n    int stateLength;\n    int zipLength;",
			"    int nameLength;\n    int streetLength;\n    int cityLength;\n    int stateLength;\n    int zipLength;",
			".zipCode"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "autoName.cpp",
					"settings":
					{
						"buffer_size": 1038,
						"regions":
						{
						},
						"selection":
						[
							[
								1005,
								1005
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 180.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"/home/ryan/Desktop/Segfault Archive/Segfault Archive.sublime-project"
			]
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 164.0,
	"status_bar_visible": true
}
